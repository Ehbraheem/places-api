c
continue
cat
loc
loc, cat = match
match = params["query"].match /\A(.+?)\sin\s(.+?)\z/i
c
match[0]
match[3]
match[2]
match[1]
match = params["query"].match /\A(.+?)\sin\s(.+?)\z/i
params["query"].match /\A(.+?)\sin\s(.+?)\z/i
params
exit
exits
records
datas
param
var all
exit
var all
data
connector
exit
jget send(make_path(object), connector.send(param))
var all
exit
jget send(make_path(object), connector.send(param))
params
param
datas
data
var all
c
payload
n
result_striper
c
last_response
c
exit
c
last_response
exit
c
exit
c
exit
Location.with_name(name).first.categories
Location.with_name(name).first
loc.each {|lo| puts lo.categories }
loc.each {|lo| lo.categories }
loc
loc = Location.with_name(name)
Location.with_name(name).landmark
Location.with_name(name)
Location.with_name(name).categories
Location.with_name(name)
@categories
c
exit
c
Location.where(:name=>name)
c
exit
name.gsub(/\s/, "+").downcase
name
exit
name
Location.where(:name=>name.upcase)
Location.methods.grep /find/
Location.methods.grep /where/
Location.methods.grep /name/
Location.find_by(:name=>name.u
Location.where("name"=>name)
Location.where(:name=>name)
Location.find(1).categories
Location.find(1)
Location.where(:name=>name)
Landmark.all
Location.all.landmark
Location.all.categories
Location.all
Location.where(:name=>name)
name
c
landmark
location
var all
exit
jget categories_path(location.name)
location.categories
landmark
location
exit
last_response
c
n
last_response
var all
n
c
n
var all
last_response
exit
var all
exit
c
exit
c
n
var all
n
var all
n
var all
n
var all
n
var all
exit
var all
exit
add_path base_path, base
var all
n
var all
n
var all
exit
add_path base_path, base
var all
n
var all
n
var all
n
var all
exit
var all
n
var all
n
var all
c
var all
n
var all
c
n
var all
c
var all
n
var all
c
var all
n
root_path
roo_path
path
exit
"df".to_a
1.to_a
[1].to_a
base.to_a
var all
n
var all
n
var all
c
exit
c
var all
c
exit
var all
base
n
var all
path
n
base + "/" +  p
var all
c
exit
c
var all
c
var all
c
meth
n
c
var all
n
var all
n
params
param
path
root_path
n
root_path
path
param
exit
exception
n
base
n
base
p
n
path
base
n
base
n
base
path
c
args
meth
c
path
base
path
c
path
base
exit
c
exit
c
args
c
landmark.location
args
exit
c
args
c
landmark.location
landmark
exit
c
meth
exit
c
args
meth
c
